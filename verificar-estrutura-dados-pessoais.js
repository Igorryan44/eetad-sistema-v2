import fetch from 'node-fetch';

// Dados dos alunos que deveriam aparecer
const alunosEsperados = [
  { nome: "Simi√£o Alves da Costa Junior", cpf: "61767735120" },
  { nome: "Bruno Alexandre Barros dos Santos", cpf: "003.807.533-40" }
];

async function verificarEstruturaDadosPessoais() {
  console.log('üîç VERIFICANDO ESTRUTURA REAL DA ABA "dados pessoais"');
  console.log('================================================================');
  
  try {
    // Simular a mesma l√≥gica da fun√ß√£o get-pending-enrollments
    const GOOGLE_SHEETS_SPREADSHEET_ID = '1BKet2O-aSnNKPRflC24PxnOQikVA5k9RhzmBiJtzhAA';
    const DADOS_PESSOAIS_SHEET = 'dados pessoais';
    
    // Fazer uma requisi√ß√£o direta para a API do Google Sheets (sem autentica√ß√£o para teste)
    console.log('\nüìä 1. Tentando acessar a planilha diretamente...');
    console.log(`ID da Planilha: ${GOOGLE_SHEETS_SPREADSHEET_ID}`);
    console.log(`Aba: ${DADOS_PESSOAIS_SHEET}`);
    
    // Como n√£o temos as credenciais aqui, vamos simular o que a fun√ß√£o deveria fazer
    console.log('\n‚ö†Ô∏è N√£o √© poss√≠vel acessar diretamente sem credenciais do Google');
    console.log('Mas podemos analisar o problema baseado nos dados fornecidos...');
    
    console.log('\nüìã 2. AN√ÅLISE DOS DADOS FORNECIDOS:');
    console.log('Estrutura dos dados que voc√™ mostrou:');
    console.log('- origem_academica');
    console.log('- em qual escola estudou?');
    console.log('- em qual modalidade estudou?');
    console.log('- congregacao');
    console.log('- nome');
    console.log('- rg');
    console.log('- cpf');
    console.log('- telefone');
    console.log('- email');
    console.log('- sexo');
    console.log('- estado_civil');
    console.log('- data_nascimento');
    console.log('- uf_nascimento');
    console.log('- escolaridade');
    console.log('- profissao');
    console.log('- nacionalidade');
    console.log('- cargo_igreja');
    console.log('- endereco_rua');
    console.log('- cep');
    console.log('- numero');
    console.log('- bairro');
    console.log('- cidade');
    console.log('- uf');
    console.log('- data_cadastro');
    
    console.log('\nüîç 3. COMPARA√á√ÉO COM ESTRUTURA ESPERADA:');
    console.log('Fun√ß√£o get-pending-enrollments espera:');
    console.log('- √çndice 1 (Coluna B): Nome');
    console.log('- √çndice 3 (Coluna D): CPF');
    console.log('- √çndice 4 (Coluna E): Telefone');
    console.log('- √çndice 5 (Coluna F): Email');
    
    console.log('\nüéØ 4. POSS√çVEL PROBLEMA IDENTIFICADO:');
    console.log('Baseado nos dados fornecidos, parece que a estrutura real √©:');
    console.log('- Coluna A: origem_academica');
    console.log('- Coluna B: em qual escola estudou?');
    console.log('- Coluna C: em qual modalidade estudou?');
    console.log('- Coluna D: congregacao');
    console.log('- Coluna E: nome ‚Üê AQUI est√° o nome (√≠ndice 4)');
    console.log('- Coluna F: rg');
    console.log('- Coluna G: cpf ‚Üê AQUI est√° o CPF (√≠ndice 6)');
    console.log('- Coluna H: telefone ‚Üê AQUI est√° o telefone (√≠ndice 7)');
    console.log('- Coluna I: email ‚Üê AQUI est√° o email (√≠ndice 8)');
    
    console.log('\n‚ùå PROBLEMA ENCONTRADO:');
    console.log('A fun√ß√£o get-pending-enrollments est√° usando √≠ndices INCORRETOS!');
    console.log('');
    console.log('ATUAL (INCORRETO):');
    console.log('- Nome: √≠ndice 1 (Coluna B) ‚Üí Mas na verdade √© "em qual escola estudou?"');
    console.log('- CPF: √≠ndice 3 (Coluna D) ‚Üí Mas na verdade √© "congregacao"');
    console.log('- Telefone: √≠ndice 4 (Coluna E) ‚Üí Mas na verdade √© "nome"');
    console.log('- Email: √≠ndice 5 (Coluna F) ‚Üí Mas na verdade √© "rg"');
    console.log('');
    console.log('DEVERIA SER (CORRETO):');
    console.log('- Nome: √≠ndice 4 (Coluna E)');
    console.log('- CPF: √≠ndice 6 (Coluna G)');
    console.log('- Telefone: √≠ndice 7 (Coluna H)');
    console.log('- Email: √≠ndice 8 (Coluna I)');
    
    console.log('\nüîß 5. SOLU√á√ÉO:');
    console.log('Precisamos corrigir a fun√ß√£o get-pending-enrollments para usar os √≠ndices corretos:');
    console.log('');
    console.log('ANTES:');
    console.log('const nome = row[1] || ""');
    console.log('const cpf = row[3] || ""');
    console.log('const telefone = row[4] || ""');
    console.log('const email = row[5] || ""');
    console.log('');
    console.log('DEPOIS:');
    console.log('const nome = row[4] || ""');
    console.log('const cpf = row[6] || ""');
    console.log('const telefone = row[7] || ""');
    console.log('const email = row[8] || ""');
    
    console.log('\n‚úÖ 6. DADOS DOS ALUNOS ESPERADOS:');
    alunosEsperados.forEach((aluno, index) => {
      console.log(`\nAluno ${index + 1}:`);
      console.log(`Nome: ${aluno.nome}`);
      console.log(`CPF: ${aluno.cpf}`);
    });
    
  } catch (error) {
    console.error('‚ùå Erro durante a verifica√ß√£o:', error);
  }
}

// Executar verifica√ß√£o
verificarEstruturaDadosPessoais();